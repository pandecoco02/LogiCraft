<resources>
    <string name="app_name">LogiCraft</string>
    <string name="title_activity_main_boolean_expression">MainBooleanExpression</string>
    <!-- Strings used for fragments for navigation -->
    <string name="first_fragment_label">First Fragment</string>
    <string name="second_fragment_label">Second Fragment</string>
    <string name="next">Next</string>
    <string name="previous">Previous</string>

    <string name="lorem_ipsum">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in scelerisque sem. Mauris
        volutpat, dolor id interdum ullamcorper, risus dolor egestas lectus, sit amet mattis purus
        dui nec risus. Maecenas non sodales nisi, vel dictum dolor. Class aptent taciti sociosqu ad
        litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse blandit eleifend
        diam, vel rutrum tellus vulputate quis. Aliquam eget libero aliquet, imperdiet nisl a,
        ornare ex. Sed rhoncus est ut libero porta lobortis. Fusce in dictum tellus.\n\n
        Suspendisse interdum ornare ante. Aliquam nec cursus lorem. Morbi id magna felis. Vivamus
        egestas, est a condimentum egestas, turpis nisl iaculis ipsum, in dictum tellus dolor sed
        neque. Morbi tellus erat, dapibus ut sem a, iaculis tincidunt dui. Interdum et malesuada
        fames ac ante ipsum primis in faucibus. Curabitur et eros porttitor, ultricies urna vitae,
        molestie nibh. Phasellus at commodo eros, non aliquet metus. Sed maximus nisl nec dolor
        bibendum, vel congue leo egestas.\n\n
        Sed interdum tortor nibh, in sagittis risus mollis quis. Curabitur mi odio, condimentum sit
        amet auctor at, mollis non turpis. Nullam pretium libero vestibulum, finibus orci vel,
        molestie quam. Fusce blandit tincidunt nulla, quis sollicitudin libero facilisis et. Integer
        interdum nunc ligula, et fermentum metus hendrerit id. Vestibulum lectus felis, dictum at
        lacinia sit amet, tristique id quam. Cras eu consequat dui. Suspendisse sodales nunc ligula,
        in lobortis sem porta sed. Integer id ultrices magna, in luctus elit. Sed a pellentesque
        est.\n\n
        Aenean nunc velit, lacinia sed dolor sed, ultrices viverra nulla. Etiam a venenatis nibh.
        Morbi laoreet, tortor sed facilisis varius, nibh orci rhoncus nulla, id elementum leo dui
        non lorem. Nam mollis ipsum quis auctor varius. Quisque elementum eu libero sed commodo. In
        eros nisl, imperdiet vel imperdiet et, scelerisque a mauris. Pellentesque varius ex nunc,
        quis imperdiet eros placerat ac. Duis finibus orci et est auctor tincidunt. Sed non viverra
        ipsum. Nunc quis augue egestas, cursus lorem at, molestie sem. Morbi a consectetur ipsum, a
        placerat diam. Etiam vulputate dignissim convallis. Integer faucibus mauris sit amet finibus
        convallis.\n\n
        Phasellus in aliquet mi. Pellentesque habitant morbi tristique senectus et netus et
        malesuada fames ac turpis egestas. In volutpat arcu ut felis sagittis, in finibus massa
        gravida. Pellentesque id tellus orci. Integer dictum, lorem sed efficitur ullamcorper,
        libero justo consectetur ipsum, in mollis nisl ex sed nisl. Donec maximus ullamcorper
        sodales. Praesent bibendum rhoncus tellus nec feugiat. In a ornare nulla. Donec rhoncus
        libero vel nunc consequat, quis tincidunt nisl eleifend. Cras bibendum enim a justo luctus
        vestibulum. Fusce dictum libero quis erat maximus, vitae volutpat diam dignissim.
    </string>
    <string name="curlydash">~</string>
    <string name="singleAtmosphere">\'</string>


    <string name="truth_description">To generate the truth table for this expression, we need to consider all possible combinations of values for the variables A, B, and C. Since there are two possible values for each variable, there are 2^3 = 8 possible combinations of values to consider. Here is the truth table for the boolean expression (~BC+A~B~C+AB):</string>
    <string name="kmap_description">Transfer the values from the truth table onto the K-map by placing a 1 in the appropriate square of the K-map for each row in which the expression evaluates to true, and a 0 in the squares where the expression evaluates to false. In this case, the K-map would look like:
    </string>

    <string name="grouping_description">Group together the 1\'s in the K-map to simplify the expression. </string>
    <string name="logic_diagram_description">We can generate a logic diagram for the simplified expression. The logic diagram represents the simplified expression using logic gates, which show how the input variables are combined to produce the output variable. \n\nBelow is the logic diagram for the simplified expression:</string>

    <string name="truth_table_step1">Begin by selecting the number of variables for your logical expression. You can choose from 2 to 6 variables. \n \n
              \t\t1. Click on the "Variables" dropdown menu. \n
              \t\t2. Choose the desired number of variables</string>


    <string name="truth_table_step2">
<![CDATA[
Once you have selected the number of variables, a Truth Table input will be generated. Here is a breakdown of the table for 3-variables:
<br><br>

<b>Columns:</b>
<ul>
  <li><b> A, B, C:</b> Represent the input variables.</li>
  <li><b> m:</b> Represents the count, starting from 0 to 2<sup>n</sup> - 1, where n is the number of variables.</li>
  <li><b> F:</b> Represents the output of the logical expression. Toggle between 0 and 1 for your desired input.</li>
</ul>

<b>Table Size Information:</b>
<ul>
  <li> For n variables, the Truth Table will have 2<sup>n</sup> rows.</li>
  <li> 2 variables: = 4 rows</li>
  <li> 3 variables: = 8 rows</li>
  <li> 4 variables: = 16 rows</li>
  <li> 5 variables: = 32 rows</li>
  <li> 6 variables: = 64 rows</li>
</ul>

<b>Lets say you selected 3 variables: A, B, and C. Your Truth Table might look like this:</b>


]]>
</string>


    <string name="karnaugh_step2">
<![CDATA[
<p>Once you have selected the number of variables, the Karnaugh Map will be generated. Here is a breakdown of the K-map:</p>

<p><b>Karnaugh Map Layout Information:</b></p>
<ul>
  <li> For n variables, the K-map layout is organized as follows:</li>
  <li> 2 variables: 2x2 grid = 4</li>
  <li> 3 variables: 2x4 grid = 8</li>
  <li> 4 variables: 4x4 grid = 16</li>
  <li> 5 variables: 4x8 grid = 32</li>
  <li> 6 variables: 8x8 grid = 64</li>
</ul>

<p><b>Cell Values:</b></p>
<ul>
  <li>0: The default value, indicating the cell is set to 0.</li>
  <li>1: Toggle to set the cell value to 1.</li>
  <li>x (Dont Care): Use this option for cells that represent Dont Care conditions in your logical expression.</li>
</ul>



]]>
</string>


    <string name="karnaugh_step2v1">
<![CDATA[


<p><b>Cell Labels:</b></p>
<ul>
  <li> <b> Small Green Box with a Number: </b> This represents the label of the corresponding input of that cell.</li>
</ul>



]]>
</string>


    <string name="karnaugh_step4">
<![CDATA[


<p><b>Grouping Types:</b></p>
<ul>
  <li> <b> Sum of Products (SOP): </b></li>
  <li> Combine adjacent cells with 1s to form groups, and create a sum of these product terms.</b></li>
    <li> <b> Product of Sums (POS):</b></li>
  <li> Combine adjacent cells with 0s to form groups, and create a product of these sum terms.</li>
</ul>



]]>
</string>


    <string name="boolean_step1">
<![CDATA[

<p>Begin by entering your Boolean expression in the designated input area. The app will automatically determine the number of variables based on your input.</p>
<p><i>Example:</i></p>
<ul>
  <li> If you enter the expression A&amp;B+C, the app will recognize the variables A,B, and C. </li>
</ul>
]]>
</string>

    <string name="boolean_step2">
        If you need help with the symbols for Boolean operators, click on the info icon at the upper right side of the screen.
</string>

    <string name="boolean_step3">
<![CDATA[

<p><b>Boolean Operator Information:</b></p>
<ul>
  <li> AND (Conjunction): True only if both operands are true.</li>
    <li>OR (Disjunction): True if at least one operand is true.</li>
    <li>NOT (Negation): Flips the truth value of the operand.</li>
    <li> (Exclusive OR): True if exactly one operand is true.</li>
    <li>NOR (Negative OR): False if at least one operand is true.</li>
</ul>
]]>
    </string>

    <string name="logic_diagram_info">


Explore various logic gates in your logic diagram.
These are logic gate names and their symbols that you will encounter:
</string>

    <string name="logic_diagram_saving">
Once the solution is generated, you can click on the pdf icon at the toolbar to save the entire solution, including your logic diagram, in PDF format.

</string>
    <string-array name="dropdown_items">
        <item>SOP</item>
        <item>POS</item>
    </string-array>

    <string-array name="dropdown_items_export">
        <item>Export as</item>
        <item>PNG</item>
        <item>JPEG</item>
        <item>PDF</item>

    </string-array>

</resources>